@using AirlineReservation.Models;
@using AirlineReservation.ViewModels;
@model Search
@{
    ViewData["Title"] = "Home Page";
}
@foreach (HeaderDec headerDec in ViewBag.HomeDec)
{
    <header id="gtco-header" class="gtco-cover gtco-cover-md" role="banner" style="background-image: url(../../uploads/HomeSection1/@headerDec.Images)">
        <div class="overlay"></div>
        <div class="gtco-container">
            <div class="row">
                <div class="col-md-12 col-md-offset-0 text-left">


                    <div class="row row-mt-15em">
                        <div class="col-md-7 mt-text animate-box" data-animate-effect="fadeInUp">
                            <h1>@headerDec.Name</h1>
                        </div>
                        <div class="col-md-4 col-md-push-1 animate-box" data-animate-effect="fadeInRight">
                            <div class="form-wrap">
                                <div class="tab">

                                    <div class="tab-content">
                                        <div class="tab-content-inner active" data-content="signup">
                                            <h3>Book Your Trip</h3>
                                            <form method="post">
                                                <div class="alert alert-danger" asp-validation-summary="ModelOnly"></div>
                                                <div class="row form-group">
                                                    <div class="col-md-12">
                                                        <label for="activities">From Witch City</label>
                                                        <div style="display:flex">
                                                            <input id="transcript" asp-for="FAirport" class="form-control">
                                                            <button type="button" id="startBtn"><i class="fa-solid fa-microphone"></i></button>
                                                        </div>
                                                        <span asp-validation-for="FAirport" class="text-danger"></span>
                                                    </div>
                                                </div>
                                                <div class="row form-group">
                                                    <div class="col-md-12">
                                                        <label for="destination">To Witch City</label>
                                                        <div style="display:flex">
                                                            <input id="transcript1" asp-for="TAirport" class="form-control">
                                                            <button type="button" id="startBtn1"><i class="fa-solid fa-microphone"></i></button>
                                                        </div>
                                                        <span asp-validation-for="TAirport" class="text-danger"></span>
                                                    </div>
                                                </div>

                                                <div class="row form-group">
                                                    <div class="col-md-12">
                                                        <label for="date-start">Date Travel</label>
                                                        <input type="date" asp-for="DateTimeAirdate" class="form-control">
                                                        <span asp-validation-for="DateTimeAirdate" class="text-danger"></span>
                                                    </div>
                                                </div>

                                                <div class="row form-group">
                                                    <div class="col-md-12">
                                                        <input type="submit" class="btn btn-primary btn-block" value="Submit">
                                                    </div>
                                                </div>
                                            </form>
                                        </div>


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </header>
}


@foreach (Titile titile in ViewBag.titl)
{
    <div class="gtco-cover gtco-cover-sm" style="background-image: url(../../uploads/HomeSection2/@titile.Images)" data-stellar-background-ratio="0.5">
        <div class="overlay"></div>
        <div class="gtco-container text-center">
            <div class="display-t">
                <div class="display-tc">
                    <h1>@titile.Name</h1>
                </div>
            </div>
        </div>
    </div>
}
<div id="gtco-subscribe">
    <div style="display:flex;justify-content:center;">
        <h1 style="color:#fff">
            Şikayət və Müraciət Üçün
        </h1>
    </div>

    <div class="gtco-container" style="display:flex;justify-content:center">
        <a asp-action="Index" asp-controller="Contact"><button type="button" class="btn btn-primary"> Sapport </button></a>
    </div>
</div>


<script>
    // get the HTML element for displaying the transcript
    const transcriptElement = document.getElementById("transcript");

    // check if browser supports the Web Speech API
    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {
        // create a new speech recognition object
        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();

        // event fired when speech recognition is started
        recognition.onstart = function () {
            console.log("Speech recognition started");
        };

        // event fired when speech is recognized
        recognition.onresult = function (event) {
            const transcript = event.results[0][0].transcript;
            transcriptElement.value = transcript;
        };

        // event fired when speech recognition is ended
        recognition.onend = function () {
            console.log("Speech recognition ended");
        };

        // add click event listener to start button
        const startBtn = document.getElementById("startBtn");
        startBtn.addEventListener("click", function () {
            recognition.start();
        });

    } else {
        console.log("Speech recognition not supported by this browser");
    }


    // get the HTML element for displaying the transcript
    const transcriptElement1 = document.getElementById("transcript1");

    // check if browser supports the Web Speech API
    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {
        // create a new speech recognition object
        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();

        // event fired when speech recognition is started
        recognition.onstart = function () {
            console.log("Speech recognition started");
        };

        // event fired when speech is recognized
        recognition.onresult = function (event) {
            const transcript2 = event.results[0][0].transcript;
            transcriptElement1.value = transcript2;
        };

        // event fired when speech recognition is ended
        recognition.onend = function () {
            console.log("Speech recognition ended");
        };

        // add click event listener to start button
        const startBtn = document.getElementById("startBtn1");
        startBtn.addEventListener("click", function () {
            recognition.start();
        });

    } else {
        console.log("Speech recognition not supported by this browser");
    }
</script>